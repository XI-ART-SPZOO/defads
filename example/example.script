local defmath = require("defmath.defmath")

function init(self)
	self.wrap_counter = 0
	self.wrap_angle_counter = 0
	
	print(defmath.dist2d(0,0,100,100)) -- 141.42
	print(defmath.dist3d(0,0,0,100,100,100)) -- 173.205
	print(defmath.angle_of_vector_between_two_points(0,0,0,1)) -- radians, 1.5707963267949, 90deg
	print(defmath.round_decimal(0.12345678,3))
	defmath.setup_rng()
	print(math.random(1,100))
	print(defmath.radians_to_degrees(defmath.degrees_to_radians(90)))
	print(defmath.sum(1,1,1,1,1))
	print(defmath.average(1,2,3,4,5,6,7,8,9))
	print(defmath.difference(-10,10))
	print(defmath.is_even(10))
	print(defmath.is_odd(10))
	print(defmath.wrap_angle(360))
	
	local vector1 = vmath.vector3(1,0,0)
	local vector2 = vmath.vector3(0,1,0)
	
	print(defmath.radians_to_degrees(defmath.angle_between_vectors(vector1,vector2)))
	
	local vector3 = vmath.vector3(-1,0,0)
	local vector4 = vmath.vector3(0,-1,0)
	
	print(defmath.average_midpoint_of_vectors(vector1, vector2, vector3, vector4))
	
	print(defmath.fraction_of(5,15))
	print(defmath.percent_of(5,15))
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- remove and false to test these
	while self.wrap_counter < 30 and false do
		self.wrap_counter = self.wrap_counter + 1
		print(defmath.wrap(self.wrap_counter,10))
	end
	while self.wrap_angle_counter < 1000 and false do
		self.wrap_angle_counter = self.wrap_angle_counter + math.random(25)
		print(defmath.wrap_angle(self.wrap_angle_counter))
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
